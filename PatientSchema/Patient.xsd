<?xml version="1.0" encoding="UTF-8"?>

<!-- 
    xlmns attribute defines the root namespace for this schema.  Every child element of <schema> will belong to this namespace.  Not sure what the :xs suffix is for.

    the suffix might be like the variable name you use to represent the URL stored in the attribute, like setting a variable?
    
    targetNamespace attribute - not sure what this is for.
    
    xmlns:tns - I think this lets us define our target namespace so we don't have to keep writing it?  Not sure. But the instructor said the :tns can be anything we want, so that supports the 'variable' convention I was considering earlier.
    
    elementFormDefault - no idea.
    -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.wavetech.org/Patient" xmlns:tns="http://www.wavetech.org/Patient" elementFormDefault="qualified">
    
    <!--I mistakenly put the complexType INSIDE the <element> tags and got errors.  Not sure why, but the complex type needs to be outside.
        
    element name=  is what elements created from this schema will be called.  The   type="tns:xxx"   attribute needs to match complexType name="xxx" if the new documents created from this schema are to have the sequence of elements I just defined.-->
    <element name="Patient" type="tns:Patient"></element>
        
    <complexType name="Patient">
            
        <!--Using a sequence mandates that any elements that occurr in this complex type should be used in the same order.-->
        <sequence>
            <!-- Looks like the type is how you choose what restrictions apply to an element?-->
            <element name="name" type="tns:String15Chars"></element>
            <element name="age" type="int"></element>
            <element name="email" type="string"></element>
            <element name="gender" type="tns:Gender"></element>
            <element name="phone" type="string"></element>    

        </sequence>

    </complexType>

    <!--simpleType can be used to add in constraints about what can and cannot be allowed in an attribute.-->
    <simpleType name="String15Chars">
        <restriction base="string">
            <maxLength value="15"></maxLength>

        </restriction>
    </simpleType>
    <simpleType name="Gender">
        <restriction base="string">
            <enumeration value="M"></enumeration>
            <enumeration value="F"></enumeration>
        </restriction>
    </simpleType>



</schema>